# .env file template for Ash Bot with API Server and Docker Secrets
# Copy this file to .env and fill in your actual values

# =============================================================================
# Global Configurations
# =============================================================================
# Secrets - See Notes Below
GLOBAL_CLAUDE_API_KEY=/run/secrets/claude_api_key
GLOBAL_SESSION_TOKEN=/run/secrets/session_token

# Claude
GLOBAL_CLAUDE_MODEL=claude-sonnet-4-20250514

# API Server Settings
GLOBAL_BOT_API_HOST=0.0.0.0
GLOBAL_BOT_API_PORT=8882

# CORS Settings
GLOBAL_API_ENABLE_CORS=true
GLOBAL_API_ALLOWED_ORIGINS=*

# Learning System
GLOBAL_ENABLE_LEARNING_SYSTEM=true

# NLP Server Configuration
GLOBAL_NLP_API_HOST=10.20.30.253
GLOBAL_NLP_API_PORT=8881
GLOBAL_REQUEST_TIMEOUT=30

# General Settings
GLOBAL_LOG_LEVEL=INFO

# =============================================================================
# DISCORD CONFIGURATION
# =============================================================================
# Discord Token - See Notes Below
BOT_DISCORD_TOKEN=/run/secrets/discord_token

BOT_GUILD_ID=your_discord_server_id_here

# =============================================================================
# CHANNEL CONFIGURATION
# =============================================================================
BOT_RESOURCES_CHANNEL_ID=your_resources_channel_id_here
BOT_CRISIS_RESPONSE_CHANNEL_ID=your_crisis_response_channel_id_here

# Channel restrictions - comma-separated list of channel IDs where Ash can respond
# Leave empty for no restrictions (responds in all channels)
BOT_ALLOWED_CHANNELS=channel_id_1,channel_id_2,channel_id_3

# =============================================================================
# TEAM CONFIGURATION
# =============================================================================
BOT_STAFF_PING_USER=staff_user_id_here
BOT_CRISIS_RESPONSE_ROLE_ID=crisis_team_role_id_here

# Display Names for Bot Responses (what users see in messages)
BOT_RESOURCES_CHANNEL_NAME=resources
BOT_CRISIS_RESPONSE_ROLE_NAME=CrisisResponse
BOT_STAFF_PING_NAME=StaffUserName

# =============================================================================
# API SERVER CONFIGURATION
# =============================================================================
# API Rate Limiting
BOT_API_RATE_LIMIT_PER_MINUTE=60
BOT_API_RATE_LIMIT_PER_HOUR=1000

# =============================================================================
# LEARNING SYSTEM CONFIGURATION
# =============================================================================
BOT_LEARNING_CONFIDENCE_THRESHOLD=0.6
BOT_MAX_LEARNING_ADJUSTMENTS_PER_DAY=50

# =============================================================================
# BOT BEHAVIOR SETTINGS
# =============================================================================
# General Settings
BOT_MAX_DAILY_CALLS=1000
BOT_RATE_LIMIT_PER_USER=10

# Conversation Isolation Configuration
BOT_CONVERSATION_REQUIRES_MENTION=true
BOT_CONVERSATION_TRIGGER_PHRASES=ash,hey ash,ash help,@ash
BOT_CONVERSATION_ALLOW_STARTERS=true
BOT_CONVERSATION_SETUP_INSTRUCTIONS=true
BOT_CRISIS_OVERRIDE_LEVELS=medium,high
BOT_CONVERSATION_LOG_ATTEMPTS=true
BOT_CONVERSATION_TIMEOUT=300

# =============================================================================
# PERFORMANCE MONITORING
# =============================================================================
# Enable performance tracking for API endpoints
BOT_ENABLE_PERFORMANCE_TRACKING=true
BOT_TRACK_RESPONSE_TIMES=true
BOT_TRACK_MEMORY_USAGE=true

# Statistics Collection
BOT_COLLECT_CRISIS_STATS=true
BOT_COLLECT_KEYWORD_STATS=true
BOT_COLLECT_LEARNING_STATS=true

# Data Retention (days)
BOT_API_RATE_LIMIT_PER_MINUTE=90
BOT_LOGS_RETENTION_DAYS=30

# =============================================================================
# DOCKER SECRETS CONFIGURATION
# =============================================================================
# Docker Secrets paths
# These files should be mounted as Docker secrets in production
# Example Docker Compose secrets configuration:
#
# service:
#   volumes:
#     - ./secrets:/run/secrets:ro

# =============================================================================
# PRODUCTION SECURITY NOTES
# =============================================================================
# 1. NEVER commit the actual .env file to version control
# 2. Use Docker Secrets for sensitive values (BOT_DISCORD_TOKEN, GLOBAL_CLAUDE_API_KEY)
# 3. Use strong, unique values for GLOBAL_SESSION_TOKEN in production
# 4. Restrict GLOBAL_API_ALLOWED_ORIGINS in production environments
# 5. Monitor API_RATE_LIMIT settings based on dashboard usage
# 6. Adjust BOT_API_RATE_LIMIT_PER_MINUTE based on available disk space
# 7. Enable HTTPS in production (not handled by this bot directly)
# 8. The API server runs on the same host as the Discord bot
# 9. Dashboard will connect to GLOBAL_BOT_API_HOST:GLOBAL_BOT_API_PORT for data

# =============================================================================
# SECRETS SETUP GUIDE
# =============================================================================
# For production deployment with Docker Secrets:
#
# 1. Create secrets directory:
#    mkdir -p ./secrets
#    chmod 700 ./secrets
#
# 2. Create secret files:
#    echo "your_discord_token_here" > ./secrets/discord_token
#    echo "your_claude_api_key_here" > ./secrets/claude_api_key
#    echo "your_random_session_token_here" > ./secrets/session_token
#    chmod 600 ./secrets
#
# 3. Configure environment to use file-based secrets:
#    BOT_DISCORD_TOKEN=/run/secrets/discord_token
#    GLOBAL_CLAUDE_API_KEY=/run/secrets/claude_api_key
#    GLOBAL_SESSION_TOKEN=/run/secrets/session_token
#
# 4. Deploy with Docker Compose that includes secrets configuration