# Ash-BOT Docker Compose for Ash Ecosystem
# Repository: https://github.com/the-alphabet-cartel/ash-bot
# Discord: https://discord.gg/alphabetcartel
# Website: http://alphabetcartel.org
services:
  # ========================================================================
  # Discord Bot (ash-bot)
  # ========================================================================
  ash-bot:
#    build:
#      context: .
    image: ghcr.io/the-alphabet-cartel/ash-bot:latest
    container_name: ash-bot
    restart: unless-stopped
    networks:
      ash-network:
        ipv4_address: 172.20.0.10
    ports:
      - 8882:8882
    environment:
      # Local Timezone
      - TZ=America/Los_Angeles
      
      # Secrets
      - BOT_DISCORD_TOKEN=${BOT_DISCORD_TOKEN}
      - GLOBAL_SESSION_TOKEN=${GLOBAL_SESSION_TOKEN}
      - GLOBAL_CLAUDE_API_KEY=${GLOBAL_CLAUDE_API_KEY}
      - GLOBAL_CLAUDE_MODEL=${GLOBAL_CLAUDE_MODEL}

      # Discord and Channel Configuration
      - BOT_GUILD_ID=${BOT_GUILD_ID}
      - BOT_RESOURCES_CHANNEL_ID=${BOT_RESOURCES_CHANNEL_ID}
      - BOT_CRISIS_RESPONSE_CHANNEL_ID=${BOT_CRISIS_RESPONSE_CHANNEL_ID}
      - BOT_ALLOWED_CHANNELS=${BOT_ALLOWED_CHANNELS}

      # Team Configuration
      - BOT_STAFF_PING_USER=${BOT_STAFF_PING_USER}
      - BOT_CRISIS_RESPONSE_ROLE_ID=${BOT_CRISIS_RESPONSE_ROLE_ID}
      - BOT_RESOURCES_CHANNEL_NAME=${BOT_RESOURCES_CHANNEL_NAME}
      - BOT_CRISIS_RESPONSE_ROLE_NAME=${BOT_CRISIS_RESPONSE_ROLE_NAME}
      - BOT_STAFF_PING_NAME=${BOT_STAFF_PING_NAME}

      # API Server Configuration
      - GLOBAL_BOT_API_PORT=${GLOBAL_BOT_API_PORT:-8882}

      # Learning System Configuration
      - GLOBAL_LEARNING_SYSTEM_ENABLED=${GLOBAL_LEARNING_SYSTEM_ENABLED}
      - BOT_LEARNING_CONFIDENCE_THRESHOLD=${BOT_LEARNING_CONFIDENCE_THRESHOLD}
      - BOT_MAX_LEARNING_ADJUSTMENTS_PER_DAY=${BOT_MAX_LEARNING_ADJUSTMENTS_PER_DAY}

      # NLP Server Configuration
      - GLOBAL_NLP_API_HOST=${GLOBAL_NLP_API_HOST}
      - GLOBAL_NLP_API_PORT=${GLOBAL_NLP_API_PORT:-8881}

      # Bot Behavior Configuration
      - GLOBAL_LOG_LEVEL=${GLOBAL_LOG_LEVEL:-INFO}
      - BOT_MAX_DAILY_CALLS=${BOT_MAX_DAILY_CALLS:-1000}
      - BOT_RATE_LIMIT_PER_USER=${BOT_RATE_LIMIT_PER_USER:-10}

      # Conversation Configuration
      - BOT_CONVERSATION_REQUIRES_MENTION=${BOT_CONVERSATION_REQUIRES_MENTION:-true}
      - BOT_CONVERSATION_TRIGGER_PHRASES=${BOT_CONVERSATION_TRIGGER_PHRASES:-ash,hey ash,ash help,@ash}
      - BOT_CONVERSATION_ALLOW_STARTERS=${BOT_CONVERSATION_ALLOW_STARTERS:-false}
      - BOT_CONVERSATION_SETUP_INSTRUCTIONS=${BOT_CONVERSATION_SETUP_INSTRUCTIONS:-true}
      - BOT_CONVERSATION_LOG_ATTEMPTS=${BOT_CONVERSATION_LOG_ATTEMPTS:-true}
      - BOT_CONVERSATION_TIMEOUT=${BOT_CONVERSATION_TIMEOUT:-300}
      - BOT_CRISIS_OVERRIDE_LEVELS=${BOT_CRISIS_OVERRIDE_LEVELS:-medium,high}
      
      # Three Zero-Shot Model Ensemble Configuration
      - BOT_ENABLE_GAP_NOTIFICATIONS=${BOT_ENABLE_GAP_NOTIFICATIONS:-true}
      - BOT_GAP_NOTIFICATION_CHANNEL_ID=${BOT_GAP_NOTIFICATION_CHANNEL_ID}

    volumes:
      - ./ash-bot/logs:/app/logs
      - ./ash-bot/data:/app/data
      - ./secrets:/run/secrets:ro
    depends_on:
      ash-redis:
        condition: service_started
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8882/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ========================================================================
  # Redis Cache
  # ========================================================================
  ash-redis:
    image: redis:7-alpine
    container_name: ash-redis
    restart: unless-stopped
    networks:
      ash-network:
        ipv4_address: 172.20.0.20
    ports:
      - 6379:6379
    command: redis-server --appendonly yes --requirepass ${GLOBAL_REDIS_PASSWORD}
    volumes:
      - redis_data:/data
      - ./secrets:/run/secrets:ro
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  ash-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local